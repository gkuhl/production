# contributed by Luca Marsella (CSCS)
# modules: Bison cray-hdf5 CrayIntel cudatoolkit ELPA 
#          flex GSL Libint libxc SIRIUS SpFFT spglib
GPUVER    = P100
NVCC      = nvcc
CC        = cc
FC        = ftn
LD        = ftn
AR        = ar -r
# LIBXSMM (-D__LIBXSMM) is slower than LIBSMM (-D__HAS_smm_dnn)
DFLAGS    = -D__ACC -D__DBCSR_ACC -D__MKL -D__PW_CUDA -D__FFTW3 -D__ELPA=201911 -D__GSL -D__HDF5 -D__LIBINT -D__LIBXC -D__MAX_CONTR=4 -D__SIRIUS -D__SPFFT -D__SPGLIB -D__parallel -D__SCALAPACK -D__HAS_smm_dnn
CFLAGS    = $(DFLAGS) -g -O3
# The compiler flag "-fp-model precise" slows down execution by ~25% 
# See https://software.intel.com/en-us/cpp-compiler-developer-guide-and-reference-fp-model-fp 
FCFLAGS   = $(DFLAGS) -g -O3 -qopenmp -funroll-loops -fpp -free
# MKL FFT is faster than FFTW3
FCFLAGS   += -I$(MKLROOT)/include -I$(MKLROOT)/include/fftw
FCFLAGS   += -I$(ELPA_INCLUDE_DIR)/elpa -I$(ELPA_INCLUDE_DIR)/modules 
FCFLAGS   += -I$(EBROOTGSL)/include/gsl
FCFLAGS   += -I$(HDF5_ROOT)/include
FCFLAGS   += -I$(EBROOTLIBINTMINCP2K)/include 
FCFLAGS   += -I$(EBROOTLIBXC)/include 
FCFLAGS   += -I$(EBROOTSIRIUS)/include/sirius
FCFLAGS   += -I$(EBROOTSPFFT)/include/spfft
FCFLAGS   += -I$(EBROOTSPGLIB)/include
LDFLAGS   = $(FCFLAGS)
LDFLAGS_C = $(FCFLAGS) -nofor_main
NVFLAGS   = $(DFLAGS) -O3 -arch sm_60
LIBS   	  = -lcudart -lcublas -lcufft -lcusolver -lrt -lnvrtc
LIBS      += -L$(MKLROOT)/lib/intel64 -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -lmkl_blacs_intelmpi_lp64 -lpthread -lstdc++ -ldl
LIBS      += -L$(EBROOTELPA)/lib -lelpa_openmp
LIBS      += -L$(EBROOTGSL)/lib -lgsl -lgslcblas
LIBS      += -L$(HDF5_ROOT)/lib -lhdf5 -lhdf5_hl
LIBS      += -L$(EBROOTLIBINTMINCP2K)/lib -lint2 -lstdc++
LIBS      += -L$(EBROOTLIBXC)/lib -lxcf03 -lxc
LIBS      += -L$(EBROOTSIRIUS)/lib64 -lsirius
LIBS      += -L$(EBROOTSPFFT)/lib64 -lspfft
LIBS      += -L$(EBROOTSPGLIB)/lib -lsymspg
LIBS      += /apps/common/UES/easybuild/sources/c/CP2K/libsmm_dnn_cray.intel.mkl.a

# Required due to memory leak that occurs if high optimisations are used
mp2_optimize_ri_basis.o: mp2_optimize_ri_basis.F
			 $(FC) -c $(subst O2,O0,$(FCFLAGS)) $<
