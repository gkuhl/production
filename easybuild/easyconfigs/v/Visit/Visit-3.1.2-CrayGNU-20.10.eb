# contributed by Jean Favre and Victor Holanda Rusu (CSCS)
#
easyblock = 'CMakeMake'

name = 'Visit'
version = '3.1.2'

homepage = 'https://wci.llnl.gov/codes/visit/'
description = """VisIt is an Open Source, interactive, scalable, visualization,
animation and analysis tool."""

toolchain = {'name': 'CrayGNU', 'version': '20.10'}
toolchainopts = {'usempi': True, 'verbose': False}

#
# Visit downloads all its dependencies by itself during the configuration.
# The downloads may fail due to different reasons. So, we have pre-packaged
# visit with the downloaded dependencies.
#
# Below you will find the steps to create the SOURCELOWER_TAR_GZ file used in
# this recipe.
#
# wget https://github.com/visit-dav/visit/releases/download/v3.1.2/visit3.1.2.tar.gz
# tar xfz visit3.1.2.tar.gz
# cd visit3.1.2
# ./src/tools/dev/scripts/build_visit --console --no-visit --parallel \
# --hdf5 --icet --llvm --mesagl \
# --qt --qwt --silo --netcdf --vtk --system-python \
# --openssl --download-only
# cd ..

# tar cfz  visit-3.1.2.tar.gz visit3.1.2
# mkdir -p $EASYBUILD_SOURCEPATH/v/Visit
# cp visit-3.1.2.tar.gz $EASYBUILD_SOURCEPATH/v/Visit/
#
# NOTES:
# * The new visit package is named visit-3.1.2.tar.gz, not visit3.1.2.tar.gz
# as the original file.
# * The download-only option must not be included in the actual build.
# * The configuration options are the same as the ones below.
# * We are using the system-python because one cannot compile python with xalt
# enabled.
# * In the preconfigopts commands below, there is an additional <<< "yes".
# This is used to accept the Qt License. This is not needed when using
# --download-only
# * The original intent was to compile only the server-side components, disabling the
# use of the GUI client for loggin nodes. Yet, this also removes the cli, preventing
# us to run python-based batch-mode scripts. Thus, we build all components [default]


# In order to use the pre-downloaded version use the source below
sources = ['/apps/common/UES/easybuild/sources/%(nameletterlower)s/%(name)s/%(namelower)s-%(version)s.tar.gz']

#buildopts = 'install'

builddependencies = [
    ('CMake', '3.14.5', '', True),
]

#preconfigopts  = ' export PAR_COMPILER=$CC; '
# preconfigopts += ' export PAR_INCLUDE="-I$MPICH_DIR/include"; '
preconfigopts = ' pushd ../visit3.1.2; mkdir third_party;  module swap gcc/9.3.0;  ./src/tools/dev/scripts/build_visit --console --no-%(namelower)s --parallel  --hdf5 --silo --netcdf  --icet --llvm --mesagl --vtk  --makeflags -j24 --system-python --alt-python-dir /usr  --openssl   --qwt --qt <<< "yes" &&  sed -i /VISIT_MPI_COMPILER/d `hostname`.cmake;  sed -i "s/rca TYPE/mpichcxx_gnu_82 rt mpich_gnu_82 rt rca pthread TYPE/g" `hostname`.cmake;  cp `hostname`.cmake ./src/config-site;  mkdir build; cd build; '
configopts = " -DCMAKE_BUILD_TYPE=RelWithDebInfo  -DVISIT_DATA_MANUAL_EXAMPLES:BOOL=ON  -DVISIT_INSTALL_THIRD_PARTY:BOOL=ON  -DVISIT_SLIVR:BOOL=OFF -DVISIT_ENABLE_XDB:BOOL=OFF "

prebuildopts = " pushd ../visit3.1.2/build;  module swap gcc/9.3.0; "

preinstallopts = " pushd ../visit3.1.2/build; "

parallel = 24

srcdir = '../visit3.1.2/src'
install_cmd = "make install && cp %(builddir)s/visit3.1.2/third_party/mesagl/17.2.8/linux-x86_64_gcc-9.3/lib/libswrAVX* %(installdir)s/current/linux-%(arch)s/lib"
modtclfooter = """
if { [ is-loaded gcc ] } {
    module swap gcc/9.3.0
}
"""
#skipsteps = ['install']

runtest = False

sanity_check_paths = {
    'files': [],
    'dirs': ['current', 'data', 'bin', '%(version)s'],
}

moduleclass = 'vis'
